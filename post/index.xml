<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pablo Estigarribia&#39;s docs</title>
    <link>https://pablodav.github.io/post/index.xml</link>
    <description>Recent content in Posts on Pablo Estigarribia&#39;s docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license with content licensed with CC BY</copyright>
    <lastBuildDate>Tue, 14 Mar 2017 07:31:51 -0300</lastBuildDate>
    <atom:link href="https://pablodav.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Graylog2 ansible</title>
      <link>https://pablodav.github.io/post/graylog/graylog_ansible/</link>
      <pubDate>Tue, 14 Mar 2017 07:31:51 -0300</pubDate>
      
      <guid>https://pablodav.github.io/post/graylog/graylog_ansible/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.graylog.org/&#34;&gt;Graylog2&lt;/a&gt; is an excelent log management and server, with many features and nice GUI interface
to use and configure streams, inputs, alerts, searchs, dashboards, etc.&lt;/p&gt;

&lt;p&gt;This document will explain how setup &lt;a href=&#34;https://github.com/Graylog2/graylog-ansible-role&#34;&gt;graylog2 using ansible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This document will be base for future documents that explain how to add more
customizations with other roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#upgrading-graylog&#34;&gt;Upgrading practice example.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Input from &lt;a href=&#34;https://github.com/mrlesmithjr/ansible-logstash&#34;&gt;logstash&lt;/a&gt;. &lt;strong&gt;TODO&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Receive &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/insights-webhooks-alerts&#34;&gt;azure alarms&lt;/a&gt;. &lt;strong&gt;TODO&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Configure commands to send alarms to &lt;a href=&#34;https://github.com/CoffeeITWorks/ansible_nagios_graylog2_nsca&#34;&gt;nagios with nsca&lt;/a&gt;. &lt;strong&gt;TODO&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CoffeeITWorks/ansible_nagios_graylog2_nsca_config_nagios&#34;&gt;Configure nagios&lt;/a&gt; to receive them. &lt;strong&gt;TODO&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Explain more about graylog with more links to graylog documentation. &lt;strong&gt;TODO&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;

&lt;p&gt;You need to know some basics from &lt;a href=&#34;http://docs.ansible.com/ansible/quickstart.html&#34;&gt;ansible&lt;/a&gt;, and ofcourse &lt;a href=&#34;http://docs.ansible.com/ansible/intro_installation.html&#34;&gt;install ansible&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t be scared about it, ansible is the most simple IT automation tool and you will get benefits learing this to manage
any other thing on your servers. Check also &lt;a href=&#34;https://www.ansible.com/how-ansible-works&#34;&gt;how ansible works&lt;/a&gt;, and &lt;a href=&#34;https://www.ansible.com/get-started&#34;&gt;get-started&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;installing-roles&#34;&gt;Installing roles&lt;/h2&gt;

&lt;p&gt;Before starting to define the usage of our roles, we need them installed on our
&lt;strong&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/intro_installation.html#control-machine-requirements&#34;&gt;ansible-control-machine&lt;/a&gt;&lt;/strong&gt;.
 As we will use this machine to actively connect and push configurations to our &lt;strong&gt;graylog2 server&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We will use &lt;code&gt;requirements.yml&lt;/code&gt; file to make the installation of roles faster.&lt;/p&gt;

&lt;p&gt;Add/create your &lt;code&gt;requirements.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;
# graylog2 

- src: graylog2.graylog
  version: master

# graylog2 dependency

- src: lesmyrmidons.mongodb
  version: master

- src: geerlingguy.java
  version: master

# 0.2 is required version to use elasticsearch 2.x
- src: elastic.elasticsearch
  version: &amp;quot;0.2&amp;quot;

- src: jdauphant.nginx
  version: master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As written in the &lt;code&gt;requirements.yml&lt;/code&gt; file, &lt;strong&gt;elasticsearch&lt;/strong&gt; must be version &lt;strong&gt;2&lt;/strong&gt;. So we need to use the branch for 0.2 of the role.&lt;/p&gt;

&lt;h3 id=&#34;install-from-requirements-yml&#34;&gt;Install from &lt;code&gt;requirements.yml&lt;/code&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo ansible-galaxy install -r requirements.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;graylog2 server&lt;/strong&gt; can be also your &lt;strong&gt;ansible-control-machine&lt;/strong&gt; if you don&amp;rsquo;t have other,
using &lt;strong&gt;localhost&lt;/strong&gt; as node in your &lt;strong&gt;inventory&lt;/strong&gt; as shown below.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;admonition warning&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Elasticsearch and java version matters&lt;/p&gt;
&lt;p&gt;You must ensure to be using elasticsearch 2, and java from openjdk-8, we will cover these
steps below, but this note will help you to know and remmember that.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;preparing-the-inventory&#34;&gt;Preparing the inventory&lt;/h2&gt;

&lt;p&gt;We will setup a group called &lt;strong&gt;graylog2_servers&lt;/strong&gt; with the hosts added to it.&lt;/p&gt;

&lt;p&gt;You need to create/edit your &lt;a href=&#34;http://docs.ansible.com/ansible/intro_inventory.html&#34;&gt;inventory&lt;/a&gt; to tell ansible which server is on &lt;strong&gt;graylog2_servers&lt;/strong&gt; group.&lt;/p&gt;

&lt;p&gt;We will create a folder called &lt;code&gt;inventory&lt;/code&gt; and a file called &lt;code&gt;production&lt;/code&gt; on it.&lt;/p&gt;

&lt;p&gt;file: &lt;code&gt;inventory/production&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;content:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[location1]
server1     ansible_host=192.168.1.50

[graylog2_servers]
server1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example I have added &lt;code&gt;server1&lt;/code&gt; to groups &lt;strong&gt;location1&lt;/strong&gt;  and &lt;strong&gt;graylog2_servers&lt;/strong&gt;.
Note also I have added &lt;code&gt;ansible_host&lt;/code&gt; variable with the IP address of &lt;code&gt;server1&lt;/code&gt;, so ansible will use automatically this
to connect to the host.&lt;/p&gt;

&lt;p&gt;other generic example: &lt;a href=&#34;https://github.com/CoffeeITWorks/ansible-generic-help/blob/master/example1/inventory/test&#34;&gt;example1/inventory/test&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;preparing-the-playbook-to-run-the-roles&#34;&gt;Preparing the playbook to run the roles&lt;/h2&gt;

&lt;p&gt;We will define a playbook to include our &lt;a href=&#34;http://docs.ansible.com/ansible/playbooks_roles.html#roles&#34;&gt;roles&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will prepare a file called &lt;code&gt;roles.graylog2.yml&lt;/code&gt; with this definition:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;
---
# This --- defines that this yaml file will have 2 spaces for indentation.


# In case you use Ubuntu trusty we will add ppa for java-jdk8
# as noticed on warning above we need to take care of it. 

- name: Add java-jdk-8 ppa for Ubuntu trusty
  hosts: graylog2_servers
  become: yes
  
  # You can specify a proxy_env var with your proxy settings here
  # check example: https://github.com/CoffeeITWorks/ansible-generic-help/blob/master/example1/group_vars/all/vars#L14
  #environment: &amp;quot;{{ proxy_env }}&amp;quot;

  tasks:
    - name: installing repo for Java 8 in Ubuntu 14.04
      apt_repository: repo=&#39;ppa:openjdk-r/ppa&#39;
      when: ansible_distribution_release == &#39;trusty&#39;

# Now we will apply all roles to our graylog2_servers:

- name: Apply roles for graylog2 servers
  hosts: graylog2_servers
  become: yes
  
  # You can specify a proxy_env var with your proxy settings here
  # check example: https://github.com/CoffeeITWorks/ansible-generic-help/blob/master/example1/group_vars/all/vars#L14
  #environment: &amp;quot;{{ proxy_env }}&amp;quot;

  roles:

    - role: lesmyrmidons.mongodb
      tags:
        - role::mongodb
        - graylog2_servers
    
    # This step is important as described in waring above
    - role: geerlingguy.java
      when: ansible_distribution_release == &#39;trusty&#39;
      java_packages:
        - openjdk-8-jdk
      tags:
        - role::elasticsearch
        - graylog2_servers
    
    # This step is important as described in waring above
    - role: geerlingguy.java
      when: ansible_os_family == &amp;quot;RedHat&amp;quot; and ansible_lsb.major_release|int &amp;gt;= 7
      java_packages:
        - java-1.8-openjdk
      tags:
        - role::elasticsearch
        - graylog2_servers
    
    # ensure you have installed 0.2 branch for elasticsearch 2.x
    - role: elastic.elasticsearch
      tags:
        - role::elasticsearch
        - graylog2_servers

    - role: jdauphant.nginx
      tags:
        - role::nginx
        - graylog2_servers
    
    # Here we will install graylog
    - role: graylog2.graylog
      tags:
        - role::graylog
        - graylog2_servers

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;preparing-the-variables&#34;&gt;Preparing the variables&lt;/h2&gt;

&lt;p&gt;We have an &lt;strong&gt;inventory&lt;/strong&gt; and a &lt;strong&gt;playbook&lt;/strong&gt; to call the roles, but we must customize the &lt;a href=&#34;http://docs.ansible.com/ansible/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable&#34;&gt;variables&lt;/a&gt; before running
 the playbook.&lt;/p&gt;

&lt;p&gt;Here we will organize the variables files into the &lt;code&gt;group_vars&lt;/code&gt; directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p group_vars/graylog2_servers 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then add a file to have organized the variables for &lt;strong&gt;elasticsearch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;group_vars/graylog2_servers/elasticsearch2_vars&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;In this file we will define &lt;strong&gt;es cluster&lt;/strong&gt;, bind address, version, memory, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;
---
# https://github.com/Graylog2/graylog-ansible-role

es_instance_name: &#39;graylog&#39;
es_scripts: False
es_templates: False
es_version_lock: False
es_heap_size: 1g

# Graylog2 doesn&#39;t support elasticsearch 5, so must install elasticsearch 2.x
es_major_version: &amp;quot;2.x&amp;quot;
es_version: &amp;quot;2.4.4&amp;quot;

es_config: {
  node.name: &amp;quot;graylog&amp;quot;,
  cluster.name: &amp;quot;graylog&amp;quot;,
  discovery.zen.ping.unicast.hosts: &amp;quot;localhost:9301&amp;quot;,
  http.port: 9200,
  transport.tcp.port: 9300,
  network.host: 0.0.0.0,
  node.data: true,
  node.master: true,
  bootstrap.mlockall: false,
  discovery.zen.ping.multicast.enabled: false
}

# Ensure to add this option if not added elastic.elasticsearch will install openjdk-7 that will break graylog2
es_java_install:               False

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then add a file to have organized the variables for &lt;strong&gt;graylog role&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;group_vars/graylog2_servers/graylog2_vars&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;
---

# Disable autoinstall of elasticsearch, java, mongodb, etc, as we will use our own playbook to call the roles:
# And ensure correct java version is installed in this way
graylog_install_elasticsearch: False
graylog_install_mongodb:       False
graylog_install_nginx:         False
graylog_install_java:          False

# Basic server settings (seems that this should go per host)
graylog_is_master:          &#39;True&#39;

# generate with: pwgen -s 96 1
graylog_password_secret:    &#39;putyourhashhere&#39; 

# generate with: echo -n yourpassword | shasum -a 256
graylog_root_password_sha2: &#39;putyourhashhere&#39; 

# Elasticsearch message retention
# Specify your retention here
graylog_elasticsearch_max_docs_per_index:    20000000
graylog_elasticsearch_max_number_of_indices: 20
graylog_elasticsearch_shards:                4
graylog_elasticsearch_replicas:              0

graylog_rest_listen_uri:  &#39;http://0.0.0.0:9000/api/&#39;
graylog_web_listen_uri:   &#39;http://0.0.0.0:9000/&#39;

nginx_sites:

  graylog:
    - listen 80
    - server_name graylog
    - location / {
      proxy_pass http://localhost:9000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass_request_headers on;
      proxy_connect_timeout 150;
      proxy_send_timeout 100;
      proxy_read_timeout 100;
      proxy_buffers 4 32k;
      client_max_body_size 8m;
      client_body_buffer_size 128k; }

# Setup per host on host_vars:
graylog_web_endpoint_uri: &#39;http://{{ ansible_host }}:9000/api/&#39;


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not all the variables are required, but I prefer to be explicit on these settings. The documentation of these vars are
on the readme of each role, also the defaults used are on the &lt;code&gt;defaults/main.yml file&lt;/code&gt; of each role (we are overriding the
defaults when assigning the vars on &lt;code&gt;group_vars&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;http://docs.ansible.com/ansible/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable&#34;&gt;playbook_variables&lt;/a&gt;
for more information&lt;/p&gt;

&lt;h2 id=&#34;review-what-s-done-until-now&#34;&gt;Review what&amp;rsquo;s done until now&lt;/h2&gt;

&lt;p&gt;We have created:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requirements.yml&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inventory/production&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roles.graylog2.yml&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_vars/graylog2_servers&lt;/code&gt; dir with &lt;code&gt;elasticsearch_vars&lt;/code&gt; and &lt;code&gt;graylog2_vars&lt;/code&gt; files&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, our tree looks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;├── requirements.yml
├── group_vars
│   ├── graylog2_servers
│   │   ├── graylog2_vars
│   │   ├── elasticsearch_vars
├── inventory
│   ├── production
├── roles.graylog2.yml

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this structure we have all required to call our roles with correct parameters.
As seen on the roles.graylog2.yml, we have associated the roles to run to &lt;strong&gt;graylog2_servers&lt;/strong&gt; group.&lt;/p&gt;

&lt;h2 id=&#34;run-the-playbook&#34;&gt;Run the playbook&lt;/h2&gt;

&lt;p&gt;We will execute here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ansible-playbook -i inventory roles.graylog2.yml --limit graylog2_servers -u user -k -K --become
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To understand some of the parameters used here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-l SUBSET, --limit=SUBSET
                    further limit selected hosts to an additional pattern
-i PATH, --inventory=PATH
                    The PATH to the inventory hosts file, which defaults to /etc/ansible/hosts. 
-k, --ask-pass
                    Prompt for the SSH password instead of assuming key-based authentication with ssh-agent. 
-K, --ask-sudo-pass
                    Prompt for the password to use for playbook plays that request sudo access, if any. 
-b, --become
                    run operations with become (does not imply password prompting) 
-u USERNAME, --remote-user=USERNAME
                    Use this remote user name on playbook steps that do not indicate a user name to run as. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As seen on the command, we use &lt;code&gt;-i inventory&lt;/code&gt; directory instead of the file, you can change it to point to the file directly.&lt;/p&gt;

&lt;p&gt;You can also check &lt;a href=&#34;http://docs.ansible.com/ansible/playbooks_vault.html&#34;&gt;ansible-vault&lt;/a&gt; to save password.&lt;/p&gt;

&lt;p&gt;You can also check variables to use in &lt;code&gt;group_vars/all&lt;/code&gt; or some other group using &lt;a href=&#34;http://docs.ansible.com/ansible/intro_inventory.html#list-of-behavioral-inventory-parameters&#34;&gt;inventory_parameters&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ansible connections are done by default with ssh, you can change them using &lt;code&gt;inventory_parameters&lt;/code&gt; and also disable &lt;a href=&#34;http://docs.ansible.com/ansible/intro_getting_started.html#host-key-checking&#34;&gt;host-key-checking&lt;/a&gt;.
Create ansible.cfg file on same dir where you run &lt;code&gt;ansible-playbook&lt;/code&gt; command and it will read that parameters.&lt;/p&gt;

&lt;h2 id=&#34;upgrading-graylog&#34;&gt;Upgrading Graylog&lt;/h2&gt;

&lt;p&gt;As ansible role is updated every time graylog is update too (check &lt;a href=&#34;https://github.com/Graylog2/graylog-ansible-role/blob/master/defaults/main.yml#L8&#34;&gt;graylog_version&lt;/a&gt;).
You only need to update the role installed, ex:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rm -rf /etc/ansible/roles/graylog2.graylog
sudo ansible-galaxy install -r requirements.yml 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then &lt;a href=&#34;#run-the-playbook&#34;&gt;run the playbook&lt;/a&gt; again.&lt;/p&gt;

&lt;p&gt;This will update your graylog repository, for example in my output I have:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;TASK [graylog2.graylog : Graylog repository package should be downloaded] ******
changed: [server1] =&amp;gt; {&amp;quot;changed&amp;quot;: true, &amp;quot;checksum_dest&amp;quot;: null, &amp;quot;checksum_src&amp;quot;: &amp;quot;ddc77cda9473f6556844c19d68c2c8de05d9dedc&amp;quot;, &amp;quot;dest
&amp;quot;: &amp;quot;/tmp/graylog_repository.deb&amp;quot;, &amp;quot;gid&amp;quot;: 0, &amp;quot;group&amp;quot;: &amp;quot;root&amp;quot;, &amp;quot;md5sum&amp;quot;: &amp;quot;df0ded30076548179772cd23bfff869f&amp;quot;, &amp;quot;mode&amp;quot;: &amp;quot;0644&amp;quot;, &amp;quot;msg&amp;quot;:
&amp;quot;OK (2056 bytes)&amp;quot;, &amp;quot;owner&amp;quot;: &amp;quot;root&amp;quot;, &amp;quot;size&amp;quot;: 2056, &amp;quot;src&amp;quot;: &amp;quot;/tmp/tmpjrGQFl&amp;quot;, &amp;quot;state&amp;quot;: &amp;quot;file&amp;quot;, &amp;quot;uid&amp;quot;: 0, &amp;quot;url&amp;quot;: &amp;quot;https://packages.gra
ylog2.org/repo/packages/graylog-2.2-repository_latest.deb&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then just upgrade on your server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or with yum:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If for some reason the role is not updated, you can add to your &lt;code&gt;group_vars/graylog2_servers/graylog2_vars&lt;/code&gt;, ex:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;graylog_version: 2.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should make same effect but without the fixes and improvements added to the role.
&lt;strong&gt;It&amp;rsquo;s recommended to update the role&lt;/strong&gt;, and also &lt;strong&gt;check the release notes&lt;/strong&gt; of both: role and graylog2.&lt;/p&gt;

&lt;p&gt;Ensure you are not upgrading elasticsearch to 5.x, to not break graylog. (should not do that if you did all steps in this page)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>